
; Data pin output program
; 1 op
.program data_output
.wrap_target
    out pins, 8          ; pull from fifo and send to data pins
.wrap

; OR /OE and /CS and set the buffer OE
; 4 ops
.program set_output_enable
.origin 0
.side_set 1
    mov pc, pins side 0
    mov pc, pins side 1
    mov pc, pins side 1
    mov pc, pins side 1

; OR /OE and /CS and set 4 pindirs
; 4 ops
.program set_pindir
.origin 0
.side_set 4 pindirs
    mov pc, pins side 0xf
    mov pc, pins side 0
    mov pc, pins side 0
    mov pc, pins side 0


; Report activity to CPU
; 8 ops
.program report_data_access
wait_oe:
    mov y, pins    ; read in all pins
    mov osr, y     ; move into the osr so we can shift them out
    out null, 20   ; skip all the other pins
    out x, 2       ; move OE in x 
    jmp x-- wait_oe  ; if /OE or /CS are high, check again

    irq nowait 0 rel ; tell the cpu

.wrap_target
wait_change:
    mov x, pins    ; read all pins again
    jmp x!=y wait_oe ; if any have changed, restart and check oe again
.wrap


; Output bitstream to TCA5405 expander
; 1 op
.program write_tca_bits
.wrap_target
    out pins, 1
.wrap

; vim:ft=pioasm

