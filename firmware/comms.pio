; y set by cpu
.program detect_access_simple
start:
    ; loop until upper address bits matches mask 
    mov osr, pins
    out null, 9
    out x, 8
    jmp x!=y start
    out null, 3 ; clock, tca, bufoe    
    out x, 2 ; oe, cs
    jmp x-- start

    ; validate that the address this matches, go back to start
    mov osr, pins
    out isr, 9
    out x, 8
    jmp x!=y start
    out null, 3 ; clock, tca, bufoe    
    out x, 2 ; oe, cs
    jmp x-- start

    ; loop until address doesn't match mask
.wrap_target 
    mov osr, pins
    out null, 9
    out x, 8
    jmp x!=y commit
.wrap

commit:
    ; push 8 bits into fifo
    push noblock
    jmp start


.program detect_clock
.wrap_target
    wait 0 pin 0
    wait 1 pin 0   
    jmp x-- dummy_jump
dummy_jump:
    mov y, ~x
    in y, 32
.wrap
