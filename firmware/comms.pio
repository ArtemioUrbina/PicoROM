

; 

; y set by cpu
.program detect_write
start:
    ; loop until upper address bits matches mask 
    mov osr, pins
    out null, 8 ; drop first 8 bits
    out x, 14 ; a8-a18, buf_oe, oe, ce
    jmp x!=y start

    ; validate that the address this matches, go back to start
    mov osr, pins
    out isr, 8 ; push lower 8 bits into ise
    out x, 14
    jmp x!=y start

    ; push 8 bits into fifo
    push noblock

    ; loop until address doesn't match mask
.wrap_target 
    mov osr, pins
    out null, 8
    out x, 14
    jmp x!=y start
.wrap


; y set by cpu
.program detect_read
start:
    ; loop until upper matches 
    mov osr, pins
    out x, 22 ; a0-a18, buf_oe, oe, ce
    jmp x!=y start

    ; validate that the address this matches, go back to start
    mov osr, pins
    out x, 22
    jmp x!=y start

    push noblock

    ; loop until address doesn't match mask
.wrap_target 
    mov osr, pins
    out x, 22
    jmp x!=y start
.wrap

.program detect_clock
.wrap_target
    wait 0 pin 0
    wait 1 pin 0    
    jmp x-- dummy_jump
dummy_jump:
    in x, 32
.wrap
